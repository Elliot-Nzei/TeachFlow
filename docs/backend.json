
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the Nigerian School Management System.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "userCode": {
          "type": "string",
          "description": "Unique system-generated code for the user."
        },
        "schoolName": {
          "type": "string",
          "description": "The name of the school the user is associated with."
        },
        "schoolAddress": {
          "type": "string",
          "description": "The physical address of the school."
        },
        "schoolMotto": {
          "type": "string",
          "description": "The school's motto or slogan."
        },
        "profilePicture": {
          "type": "string",
          "description": "URL of the user's profile picture."
        },
        "currentTerm": {
          "type": "string",
          "enum": [
            "First Term",
            "Second Term",
            "Third Term"
          ]
        },
        "currentSession": {
          "type": "string",
          "description": "e.g. 2023/2024"
        },
        "studentCounter": {
          "type": "number",
          "description": "A counter to generate unique student IDs."
        }
      },
      "required": [
        "name",
        "email",
        "userCode",
        "schoolName"
      ]
    },
    "Class": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Class",
      "type": "object",
      "description": "Represents a class within the school.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the class (e.g., Primary 3A)."
        },
        "subjects": {
          "type": "array",
          "description": "List of subject names offered in this class.",
          "items": {
            "type": "string"
          }
        },
        "students": {
          "type": "array",
          "description": "List of student document IDs in this class.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "Student": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Student",
      "type": "object",
      "description": "Represents a student in a class.",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "classId": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "studentId",
        "name",
        "classId",
        "className"
      ]
    },
    "Subject": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subject",
      "type": "object",
      "description": "Represents a subject offered by the school.",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Grade": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Grade",
      "type": "object",
      "description": "Represents a student's grade for a specific subject and term.",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "classId": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "session": {
          "type": "string"
        },
        "score": {
          "type": "number"
        },
        "studentName": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "grade": {
          "type": "string",
          "enum": ["A", "B", "C", "D", "E", "F"]
        }
      },
      "required": [
        "studentId",
        "classId",
        "subject",
        "term",
        "session",
        "score",
        "studentName",
        "className",
        "grade"
      ]
    },
    "Attendance": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Attendance",
      "type": "object",
      "description": "Represents a student's attendance record for a specific day.",
      "properties": {
        "studentId": { "type": "string" },
        "classId": { "type": "string" },
        "date": { "type": "string", "format": "date" },
        "status": { "type": "string", "enum": ["Present", "Absent", "Late"] },
        "term": { "type": "string" },
        "session": { "type": "string" }
      },
      "required": ["studentId", "classId", "date", "status", "term", "session"]
    },
    "Trait": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Trait",
      "type": "object",
      "description": "Represents behavioral traits and ratings for a student.",
      "properties": {
        "studentId": {
          "type": "string",
          "description": "The student's ID"
        },
        "studentName": {
          "type": "string",
          "description": "The student's name"
        },
        "classId": {
          "type": "string",
          "description": "The class ID"
        },
        "className": {
          "type": "string",
          "description": "The class name"
        },
        "term": {
          "type": "string",
          "enum": ["First Term", "Second Term", "Third Term"],
          "description": "The academic term"
        },
        "session": {
          "type": "string",
          "description": "The academic session (e.g., 2024/2025)"
        },
        "traits": {
          "type": "object",
          "description": "Object containing trait ratings where keys are trait names and values are ratings (1-5)",
          "additionalProperties": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "examples": [{
            "Punctuality": 4,
            "Neatness": 5,
            "Honesty": 5,
            "Cooperation": 3,
            "Attentiveness": 4
          }]
        }
      },
      "required": [
        "studentId",
        "studentName",
        "classId",
        "className",
        "term",
        "session",
        "traits"
      ]
    },
    "Transfer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transfer",
      "type": "object",
      "description": "Represents a data transfer request between two users.",
      "properties": {
        "fromUserCode": {
          "type": "string",
          "description": "The user code of the sender."
        },
        "fromUserId": {
          "type": "string",
          "description": "The UID of the sender."
        },
        "toUserId": {
          "type": "string",
          "description": "The UID of the recipient."
        },
        "dataType": {
          "type": "string",
          "enum": ["Class", "Grades", "Report Card"]
        },
        "dataId": {
            "type": "string",
            "description": "The ID of the document being transferred (e.g., classId, studentId)."
        },
        "dataTransferred": {
            "type": "string",
            "description": "A human-readable name for the data being transferred (e.g., 'Primary 3B' or 'Ada Okoro')."
        },
        "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the transfer was created."
        },
        "processedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the transfer was accepted or rejected."
        }
      },
      "required": [
        "fromUserCode",
        "fromUserId",
        "toUserId",
        "dataType",
        "dataId",
        "dataTransferred",
        "status",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "users/{userId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/User"
          },
          "description": "Stores user profiles and settings. The `userId` is the Firebase Auth UID."
        }
      },
      {
        "path": "users/{userId}/classes/{classId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/Class"
          },
          "description": "Stores classes created by a specific user."
        }
      },
      {
        "path": "users/{userId}/students/{studentId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/Student"
          },
          "description": "Stores students belonging to a specific user/school."
        }
      },
      {
        "path": "users/{userId}/subjects/{subjectId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/Subject"
          },
          "description": "The master list of subjects for a user/school."
        }
      },
      {
        "path": "users/{userId}/grades/{gradeId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/Grade"
          },
          "description": "Stores all grades entered by a specific user."
        }
      },
      {
        "path": "users/{userId}/attendance/{attendanceId}",
        "definition": {
          "schema": { "$ref": "#/entities/Attendance" },
          "description": "Stores daily attendance records for students."
        }
      },
      {
        "path": "users/{userId}/traits/{traitId}",
        "definition": {
          "schema": { "$ref": "#/entities/Trait" },
          "description": "Stores behavioral traits and ratings for students."
        }
      },
      {
        "path": "users/{userId}/incomingTransfers/{transferId}",
        "definition": {
          "schema": {
            "$ref": "#/entities/Transfer"
          },
          "description": "A recipient's log of incoming data transfer requests. This collection is where senders write to."
        }
      }
    ],
    "rules": [
        {
            "path": "/users/{userId}/incomingTransfers/{transferId}",
            "rules": {
                "read": "request.auth.uid == userId",
                "write": "request.auth.uid == userId"
            }
        },
        {
            "path": "/users/{userId}/incomingTransfers/{transferId}",
            "rules": {
                "create": "request.auth != null"
            }
        }
    ],
    "reasoning": "This data structure is user-centric and highly secure. All primary data (classes, students, subjects, grades, etc.) is nested under the `/users/{userId}` collection, simplifying security rules so a user can only access their own data. For the data transfer feature, a request is written to a subcollection (`incomingTransfers`) under the RECIPIENT's user document. This is the most critical security consideration. The owner of the document (the recipient) must have read access to this subcollection to see their requests. Other authenticated users must have write-only access to this subcollection so they can send a request. This model is highly scalable and secure as it avoids all global queries and ensures users only ever interact with data within their own document tree."
  }
}


    