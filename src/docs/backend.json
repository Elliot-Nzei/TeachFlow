
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user (teacher/admin) in the TeachFlow School Management System.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "enum": ["admin", "teacher", "marketplace_admin"],
          "description": "The role of the user."
        },
        "userCode": {
          "type": "string",
          "description": "Unique system-generated code for the user."
        },
        "schoolName": {
          "type": "string",
          "description": "The name of the school the user is associated with."
        },
        "schoolAddress": {
          "type": "string",
          "description": "The physical address of the school."
        },
        "schoolMotto": {
          "type": "string",
          "description": "The school's motto or slogan."
        },
        "schoolLogo": {
          "type": "string",
          "description": "URL of the school's logo."
        },
        "currentTerm": {
          "type": "string",
          "enum": [
            "First Term",
            "Second Term",
            "Third Term"
          ]
        },
        "currentSession": {
          "type": "string",
          "description": "e.g. 2023/2024"
        },
        "studentCounter": {
          "type": "number",
          "description": "A counter to generate unique student IDs."
        },
        "plan": {
          "type": "string",
          "enum": ["free_trial", "basic", "prime"],
          "description": "The user's current subscription plan."
        },
        "planStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the current plan (trial or paid) started."
        },
        "subscriptionCycle": {
            "type": "string",
            "enum": ["monthly", "annually"],
            "description": "The billing cycle for the subscription."
        },
        "aiUsage": {
            "type": "object",
            "description": "Tracks monthly AI feature usage.",
            "properties": {
                "reportCardGenerations": { "type": "number" },
                "lessonNoteGenerations": { "type": "number" },
                "examGenerations": { "type": "number" },
                "usageCycleStartDate": { "type": "string", "format": "date-time" }
            }
        }
      },
      "required": [
        "name",
        "email",
        "userCode",
        "schoolName",
        "role"
      ]
    },
    "Parent": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Parent",
        "type": "object",
        "description": "Represents a parent user account.",
        "properties": {
            "name": {
                "type": "string",
                "description": "The parent's full name."
            },
            "email": {
                "type": "string",
                "description": "The parent's email address.",
                "format": "email"
            },
            "linkedStudentIds": {
                "type": "array",
                "description": "A list of Firestore document IDs for the children linked to this parent.",
                "items": { "type": "string" }
            },
             "linkedParentIds": {
                "type": "array",
                "description": "A list of human-readable Parent IDs (e.g., PARENT-XYZ) linked to this account.",
                "items": { "type": "string" }
            }
        },
        "required": ["name", "email", "linkedStudentIds", "linkedParentIds"]
    },
    "Notification": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Notification",
        "type": "object",
        "description": "Represents a notification for a user.",
        "properties": {
            "title": { "type": "string", "description": "The title of the notification." },
            "message": { "type": "string", "description": "The main content of the notification." },
            "type": { "type": "string", "enum": ["sale", "stock", "transfer", "general"], "description": "The category of the notification." },
            "isRead": { "type": "boolean", "description": "Whether the notification has been read." },
            "link": { "type": "string", "format": "uri-reference", "description": "An optional link to navigate to." },
            "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the notification was created." }
        },
        "required": ["title", "message", "type", "isRead", "createdAt"]
    },
    "MarketplaceProduct": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Marketplace Product",
      "type": "object",
      "description": "Represents a product available for sale in the marketplace.",
      "properties": {
        "name": { "type": "string", "description": "Name of the product." },
        "description": { "type": "string", "description": "Detailed description of the product." },
        "price": { "type": "number", "description": "Price in the local currency (e.g., Naira)." },
        "category": { "type": "string", "enum": ["Digital Resource", "Physical Good", "Service"], "description": "The category the product belongs to." },
        "status": { "type": "string", "enum": ["active", "archived"], "description": "The current status of the product listing." },
        "stock": { "type": "number", "description": "Available stock quantity. Use 0 for unlimited digital goods." },
        "imageUrl": { "type": "string", "format": "uri", "description": "URL for the product's primary image." },
        "locations": { "type": "array", "description": "List of states or cities where the product is available.", "items": { "type": "string" } },
        "sellerId": { "type": "string", "description": "The user ID of the seller (admin in this case)." },
        "createdAt": { "type": "string", "format": "date-time", "description": "Timestamp when the product was created." },
        "updatedAt": { "type": "string", "format": "date-time", "description": "Timestamp when the product was last updated." }
      },
      "required": ["name", "price", "category", "status", "sellerId", "createdAt"]
    },
    "Class": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Class",
      "type": "object",
      "description": "Represents a class within the school.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the class (e.g., Primary 3A)."
        },
        "grade": {
          "type": "string",
          "description": "The academic grade of the class, used for promotion logic (e.g., '1' for Primary 1, 'Pre-Nursery')."
        },
        "category": {
          "type": "string",
          "description": "The category of the class.",
          "enum": ["Early Years", "Primary", "Junior Secondary", "Senior Secondary"]
        },
        "subjects": {
          "type": "array",
          "description": "List of subject names offered in this class.",
          "items": {
            "type": "string"
          }
        },
        "students": {
          "type": "array",
          "description": "List of student document IDs in this class.",
          "items": {
            "type": "string"
          }
        },
        "feeAmount": {
          "type": "number",
          "description": "The school fee amount for this class for a term."
        }
      },
      "required": [
        "name",
        "grade",
        "category"
      ]
    },
    "Student": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Student",
      "type": "object",
      "description": "Represents a student in a class.",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "classId": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string",
          "format": "uri"
        },
        "address": {
          "type": "string",
          "description": "The student's residential address."
        },
        "guardianName": {
            "type": "string",
            "description": "Full name of the parent or guardian."
        },
        "guardianPhone": {
            "type": "string",
            "description": "Phone number of the parent or guardian."
        },
        "guardianEmail": {
            "type": "string",
            "format": "email",
            "description": "Email address of the parent or guardian."
        },
        "promotionHistory": {
          "type": "array",
          "description": "A log of the student's promotions.",
          "items": {
            "type": "object",
            "properties": {
              "from": { "type": "string" },
              "to": { "type": "string" },
              "date": { "type": "string", "format": "date-time" },
              "session": { "type": "string" }
            }
          }
        },
        "parentId": {
            "type": "string",
            "description": "A unique, permanent ID for parent access."
        },
        "parentAccessCount": {
            "type": "number",
            "description": "How many times the parent has accessed the record this month."
        },
        "lastAccessMonth": {
            "type": "string",
            "description": "The last month the parent accessed the record (YYYY-MM)."
        },
        "transferredFrom": {
            "type": "string",
            "description": "The original user ID if this student record was transferred."
        },
        "originalStudentDocId": {
            "type": "string",
            "description": "The original document ID of the student from the source user account."
        }
      },
      "required": [
        "studentId",
        "name",
        "parentId"
      ]
    },
    "Subject": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Subject",
      "type": "object",
      "description": "Represents a subject offered by the school.",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Grade": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Grade",
      "type": "object",
      "description": "Represents a student's grade for a specific subject and term.",
      "properties": {
        "studentId": {
          "type": "string"
        },
        "classId": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "session": {
          "type": "string"
        },
        "ca1": {
            "type": "number",
            "description": "Score for Continuous Assessment 1."
        },
        "ca2": {
            "type": "number",
            "description": "Score for Continuous Assessment 2."
        },
        "exam": {
            "type": "number",
            "description": "Score for the exam."
        },
        "total": {
            "type": "number",
            "description": "The total score (ca1 + ca2 + exam)."
        },
        "studentName": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "grade": {
          "type": "string",
          "enum": ["A", "B", "C", "D", "E", "F"]
        }
      },
      "required": [
        "studentId",
        "classId",
        "subject",
        "term",
        "session",
        "total",
        "studentName",
        "className",
        "grade"
      ]
    },
    "Attendance": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Attendance",
      "type": "object",
      "description": "Represents a student's attendance record for a specific day.",
      "properties": {
        "studentId": { "type": "string" },
        "classId": { "type": "string" },
        "date": { "type": "string", "format": "date" },
        "status": { "type": "string", "enum": ["Present", "Absent", "Late"] },
        "term": { "type": "string" },
        "session": { "type": "string" }
      },
      "required": ["studentId", "classId", "date", "status", "term", "session"]
    },
    "Trait": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Trait",
      "type": "object",
      "description": "Represents behavioral traits and ratings for a student.",
      "properties": {
        "studentId": {
          "type": "string",
          "description": "The student's ID"
        },
        "studentName": {
          "type": "string",
          "description": "The student's name"
        },
        "classId": {
          "type": "string",
          "description": "The class ID"
        },
        "className": {
          "type": "string",
          "description": "The class name"
        },
        "term": {
          "type": "string",
          "enum": ["First Term", "Second Term", "Third Term"],
          "description": "The academic term"
        },
        "session": {
          "type": "string",
          "description": "The academic session (e.g., 2024/2025)"
        },
        "traits": {
          "type": "object",
          "description": "Object containing trait ratings where keys are trait names and values are ratings (1-5)",
          "additionalProperties": {
            "type": "number",
            "minimum": 1,
            "maximum": 5
          },
          "examples": [{
            "Punctuality": 4,
            "Neatness": 5,
            "Honesty": 5,
            "Cooperation": 3,
            "Attentiveness": 4
          }]
        }
      },
      "required": [
        "studentId",
        "studentName",
        "classId",
        "className",
        "term",
        "session",
        "traits"
      ]
    },
    "Payment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Payment",
      "type": "object",
      "description": "Represents a student's school fee payment record for a term.",
      "properties": {
        "studentId": { "type": "string" },
        "classId": { "type": "string" },
        "term": { "type": "string" },
        "session": { "type": "string" },
        "amountDue": { "type": "number" },
        "amountPaid": { "type": "number" },
        "balance": { "type": "number" },
        "status": { "type": "string", "enum": ["Paid", "Partially Paid", "Owing"] },
        "lastPaymentDate": { "type": "string", "format": "date" },
        "paymentMethod": { "type": "string", "enum": ["Cash", "Bank Transfer", "POS", "Other"] },
        "remarks": { "type": "string" }
      },
      "required": [ "studentId", "classId", "term", "session", "amountDue", "amountPaid", "balance", "status" ]
    },
    "Transfer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transfer",
      "type": "object",
      "description": "Represents a data transfer request between two users.",
      "properties": {
        "fromUserCode": {
          "type": "string",
          "description": "The user code of the sender."
        },
        "fromUserId": {
          "type": "string",
          "description": "The UID of the sender."
        },
        "toUserCode": {
          "type": "string",
          "description": "The user code of the recipient."
        },
        "toUserId": {
          "type": "string",
          "description": "The UID of the recipient."
        },
        "dataType": {
          "type": "string",
          "enum": ["Class", "Grades", "Report Card"]
        },
        "dataId": {
            "type": "string",
            "description": "The ID of the document being transferred (e.g., classId, studentId)."
        },
        "dataTransferred": {
            "type": "string",
            "description": "A human-readable name for the data being transferred (e.g., 'Primary 3B' or 'Ada Okoro')."
        },
        "status": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected"]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the transfer was created."
        },
        "processedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the transfer was accepted or rejected."
        },
        "traits": {
          "type": "array",
          "items": {
            "$ref": "#/entities/Trait"
          }
        },
        "timetable": {
            "$ref": "#/entities/Timetable"
        }
      },
      "required": [
        "fromUserCode",
        "fromUserId",
        "toUserId",
        "toUserCode",
        "dataType",
        "dataId",
        "dataTransferred",
        "status",
        "createdAt"
      ]
    },
    "Timetable": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Timetable",
      "type": "object",
      "description": "Represents the weekly timetable for a class.",
      "properties": {
        "classId": {
          "type": "string",
          "description": "The ID of the class this timetable belongs to."
        },
        "className": {
          "type": "string",
          "description": "The name of the class."
        },
        "schedule": {
          "type": "object",
          "description": "An object containing the schedule for each day of the week.",
          "properties": {
            "Monday": { "$ref": "#/entities/Timetable/definitions/daySchedule" },
            "Tuesday": { "$ref": "#/entities/Timetable/definitions/daySchedule" },
            "Wednesday": { "$ref": "#/entities/Timetable/definitions/daySchedule" },
            "Thursday": { "$ref": "#/entities/Timetable/definitions/daySchedule" },
            "Friday": { "$ref": "#/entities/Timetable/definitions/daySchedule" }
          }
        }
      },
      "required": ["classId", "className", "schedule"],
      "definitions": {
        "daySchedule": {
          "type": "array",
          "description": "An array of periods for a single day.",
          "items": {
            "type": "object",
            "properties": {
              "startTime": { "type": "string", "format": "time", "description": "e.g., 08:00" },
              "endTime": { "type": "string", "format": "time", "description": "e.g., 08:40" },
              "subject": { "type": "string", "description": "The subject for this period." }
            },
            "required": ["startTime", "endTime", "subject"]
          }
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "/users/{userId}": {
      "schema": { "$ref": "#/entities/User"},
      "description": "Stores user profile (teacher/admin) and application settings."
    },
     "/parents/{parentId}": {
      "schema": { "$ref": "#/entities/Parent"},
      "description": "Stores parent user profiles. Parent can create their own account."
    },
    "/marketplace_products/{productId}": {
      "schema": { "$ref": "#/entities/MarketplaceProduct"},
      "description": "Stores products for the marketplace, accessible platform-wide."
    },
    "/users/{userId}/notifications/{notificationId}": {
        "schema": { "$ref": "#/entities/Notification" },
        "description": "Stores notifications for a user."
    },
    "/users/{userId}/classes/{classId}": {
      "schema": { "$ref": "#/entities/Class" },
      "description": "Stores classes for a user."
    },
    "/users/{userId}/students/{studentId}": {
      "schema": { "$ref": "#/entities/Student" },
      "description": "Stores students for a user."
    },
    "/users/{userId}/subjects/{subjectId}": {
      "schema": { "$ref": "#/entities/Subject" },
      "description": "Stores master subject list for a user."
    },
    "/users/{userId}/grades/{gradeId}": {
      "schema": { "$ref": "#/entities/Grade" },
      "description": "Stores student grade records."
    },
    "/users/{userId}/attendance/{attendanceId}": {
      "schema": { "$ref": "#/entities/Attendance" },
      "description": "Stores student attendance records."
    },
    "/users/{userId}/traits/{traitId}": {
      "schema": { "$ref": "#/entities/Trait" },
      "description": "Stores student behavioral trait records."
    },
    "/users/{userId}/incomingTransfers/{transferId}": {
      "schema": { "$ref": "#/entities/Transfer" },
      "description": "Stores incoming data transfer requests for a user."
    },
    "/users/{userId}/outgoingTransfers/{transferId}": {
      "schema": { "$ref": "#/entities/Transfer" },
      "description": "Stores a log of outgoing data transfers initiated by a user."
    },
    "/users/{userId}/payments/{paymentId}": {
      "schema": { "$ref": "#/entities/Payment" },
      "description": "Stores student payment records for a term."
    },
     "/users/{userId}/timetables/{timetableId}": {
      "schema": { "$ref": "#/entities/Timetable" },
      "description": "Stores the weekly timetable for a specific class."
    }
  }
}

    