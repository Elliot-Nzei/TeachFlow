rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if isSignedIn();

      // Subcollections
      match /classes/{classId} {
        allow read, write: if isOwner(userId);
      }
      match /students/{studentId} {
        allow read, write: if isOwner(userId);
      }
      match /grades/{gradeId} {
        allow read, write: if isOwner(userId);
      }
      match /attendance/{attendanceId} {
        allow read, write: if isOwner(userId);
      }
      match /traits/{traitId} {
        allow read, write: if isOwner(userId);
      }
      match /outgoingTransfers/{transferId} {
        allow read, write: if isOwner(userId);
      }
      match /subjects/{subjectId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Separate match for incoming transfers as it has a different logic for creation
    match /users/{userId}/incomingTransfers/{transferId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if isSignedIn() && request.resource.data.toUserId == userId;
    }
  }
}
