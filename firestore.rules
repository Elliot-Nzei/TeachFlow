
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read all user data for management purposes
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    match /users/{userId} {
        allow list: if isAdmin();
    }

    // Owners can manage their own subcollections
    match /users/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }
    
    match /students/{studentId} {
        allow list: if isAdmin();
    }
    
    // Marketplace products are public to read, but only admins can write
    match /marketplace_products/{productId} {
      allow read;
      allow write: if isAdmin();
    }

    // Parents can create their own accounts
    match /parents/{parentId} {
        allow create: if isSignedIn();
        allow read, write: if isOwner(parentId);
    }
  }
}
