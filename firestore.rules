rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admins can read the entire 'users' collection.
    match /users/{userId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Any authenticated user can read their own profile.
      allow get: if request.auth != null && request.auth.uid == userId;
      // Any authenticated user can update their own profile.
      allow update: if request.auth != null && request.auth.uid == userId;
      // Users can only be created via a server-side function, not directly.
      allow create: if false;

      // Rules for user subcollections
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /parents/{parentId} {
      // Authenticated users can read/update their own parent profile
      allow get, update: if request.auth != null && request.auth.uid == parentId;
      // Allow creation of parent profiles
      allow create: if request.auth != null;
    }

    match /marketplace_products/{productId} {
      // Any authenticated user can read active marketplace products.
      allow get: if request.auth != null;
      // Listing all products is also allowed for any authenticated user.
      allow list: if request.auth != null;
    }
  }
}
