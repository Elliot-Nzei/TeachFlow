
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the top-level 'users' collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);

      // Rules for all user subcollections (classes, grades, etc.)
      match /{subcollection}/{docId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Rules for the top-level 'students' collection
    match /students/{studentId} {
      // Allow read access if the user is the owner OR if it's a parent portal query
      allow read: if isOwner(resource.data.userId);
      
      // Allow list access for teachers querying their own students, and for parents querying by parentId
      allow list: if (isAuthenticated() && request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid) || 
                     (request.auth == null && request.query.keys.hasOnly(['parentId']));
                     
      // Allow write access only to the owner
      allow write: if isOwner(request.resource.data.userId);
    }
  }
}

    