rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Rules for the top-level 'users' collection
    match /users/{userId} {
      // Admins can read any user document. Users can read/write their own.
      allow get: if isOwner(userId) || isAdmin();
      allow create, update, delete: if isOwner(userId);
    }
    match /users {
        // Only admins can list all users.
        allow list: if isAdmin();
    }
    
    // Rules for all user subcollections
    match /users/{userId}/{allPaths=**} {
        allow read, write: if isOwner(userId) || isAdmin();
    }

    // Rules for collection groups needed for admin queries
    match /{path=**}/students/{studentId} {
      // Allow an admin to perform a 'list' query across all users' students subcollections.
      allow list: if isAdmin();
    }

    // Rules for top-level marketplace products
    match /marketplace_products/{productId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
     match /marketplace_products {
      allow list: if isAdmin() || request.auth != null; // Allow all authenticated users to browse
    }
    
    // Rules for parent accounts
    match /parents/{parentId} {
        allow read, write: if request.auth != null && request.auth.uid == parentId;
    }
  }
}
